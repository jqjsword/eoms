define(["./when-208fe5b0","./Cartesian2-716c2715","./ArcType-dc1c5aee","./arrayRemoveDuplicates-28d5a12e","./Transforms-f1816abc","./Color-11ac8724","./ComponentDatatype-549ec0d3","./Check-d18af7c4","./GeometryAttribute-0ee94cf1","./GeometryAttributes-b0b294d8","./IndexDatatype-d9b71b2b","./Math-3ba16bed","./PolylinePipeline-fe86878e","./VertexFormat-24041ad5","./RuntimeError-7f634f5d","./WebGLConstants-76bb35d1","./EllipsoidGeodesic-4bc5cec5","./EllipsoidRhumbLine-886cd793","./IntersectionTests-680c4e46","./Plane-f5dfabcd"],function(W,Y,z,J,j,K,Q,y,X,Z,$,ee,te,h,e,t,r,o,a,n){"use strict";var re=[];function m(e){var t=(e=W.defaultValue(e,W.defaultValue.EMPTY_OBJECT)).positions,r=e.colors,o=W.defaultValue(e.width,1),a=W.defaultValue(e.colorsPerVertex,!1);if(!W.defined(t)||t.length<2)throw new y.DeveloperError("At least two positions are required.");if("number"!=typeof o)throw new y.DeveloperError("width must be a number");if(W.defined(r)&&(a&&r.length<t.length||!a&&r.length<t.length-1))throw new y.DeveloperError("colors has an invalid length.");this._positions=t,this._colors=r,this._width=o,this._colorsPerVertex=a,this._vertexFormat=h.VertexFormat.clone(W.defaultValue(e.vertexFormat,h.VertexFormat.DEFAULT)),this._arcType=W.defaultValue(e.arcType,z.ArcType.GEODESIC),this._granularity=W.defaultValue(e.granularity,ee.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=Y.Ellipsoid.clone(W.defaultValue(e.ellipsoid,Y.Ellipsoid.WGS84)),this._workerName="createPolylineGeometry";t=1+t.length*Y.Cartesian3.packedLength;t+=W.defined(r)?1+r.length*K.Color.packedLength:1,this.packedLength=t+Y.Ellipsoid.packedLength+h.VertexFormat.packedLength+4}m.pack=function(e,t,r){if(!W.defined(e))throw new y.DeveloperError("value is required");if(!W.defined(t))throw new y.DeveloperError("array is required");var o;r=W.defaultValue(r,0);var a=e._positions,n=a.length;for(t[r++]=n,o=0;o<n;++o,r+=Y.Cartesian3.packedLength)Y.Cartesian3.pack(a[o],t,r);var i=e._colors,n=W.defined(i)?i.length:0;for(t[r++]=n,o=0;o<n;++o,r+=K.Color.packedLength)K.Color.pack(i[o],t,r);return Y.Ellipsoid.pack(e._ellipsoid,t,r),r+=Y.Ellipsoid.packedLength,h.VertexFormat.pack(e._vertexFormat,t,r),r+=h.VertexFormat.packedLength,t[r++]=e._width,t[r++]=e._colorsPerVertex?1:0,t[r++]=e._arcType,t[r]=e._granularity,t};var f=Y.Ellipsoid.clone(Y.Ellipsoid.UNIT_SPHERE),v=new h.VertexFormat,C={positions:void 0,colors:void 0,ellipsoid:f,vertexFormat:v,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};m.unpack=function(e,t,r){if(!W.defined(e))throw new y.DeveloperError("array is required");t=W.defaultValue(t,0);for(var o=e[t++],a=new Array(o),n=0;n<o;++n,t+=Y.Cartesian3.packedLength)a[n]=Y.Cartesian3.unpack(e,t);var i=0<(o=e[t++])?new Array(o):void 0;for(n=0;n<o;++n,t+=K.Color.packedLength)i[n]=K.Color.unpack(e,t);var l=Y.Ellipsoid.unpack(e,t,f);t+=Y.Ellipsoid.packedLength;var s=h.VertexFormat.unpack(e,t,v);t+=h.VertexFormat.packedLength;var p=e[t++],d=1===e[t++],c=e[t++],u=e[t];return W.defined(r)?(r._positions=a,r._colors=i,r._ellipsoid=Y.Ellipsoid.clone(l,r._ellipsoid),r._vertexFormat=h.VertexFormat.clone(s,r._vertexFormat),r._width=p,r._colorsPerVertex=d,r._arcType=c,r._granularity=u,r):(C.positions=a,C.colors=i,C.width=p,C.colorsPerVertex=d,C.arcType=c,C.granularity=u,new m(C))};var oe=new Y.Cartesian3,ae=new Y.Cartesian3,ne=new Y.Cartesian3,ie=new Y.Cartesian3;return m.createGeometry=function(e){var t=e._width,r=e._vertexFormat,o=e._colors,a=e._colorsPerVertex,n=e._arcType,i=e._granularity,l=e._ellipsoid,s=J.arrayRemoveDuplicates(e._positions,Y.Cartesian3.equalsEpsilon);if(!((_=s.length)<2||t<=0)){if(n===z.ArcType.GEODESIC||n===z.ArcType.RHUMB){var p,d=n===z.ArcType.GEODESIC?(p=ee.CesiumMath.chordLength(i,l.maximumRadius),te.PolylinePipeline.numberOfPoints):(p=i,te.PolylinePipeline.numberOfPointsRhumbLine),c=te.PolylinePipeline.extractHeights(s,l);if(W.defined(o)){for(var u=1,y=0;y<_-1;++y)u+=d(s[y],s[y+1],p);var h=new Array(u),m=0;for(y=0;y<_-1;++y){var f=s[y],v=s[y+1],C=o[y],g=d(f,v,p);if(a&&y<u)for(var w=function(e,t,r){var o=re;o.length=r;var a=e.red,n=e.green,i=e.blue,l=e.alpha,s=t.red,p=t.green,d=t.blue,c=t.alpha;if(K.Color.equals(e,t)){for(f=0;f<r;f++)o[f]=K.Color.clone(e);return o}for(var u=(s-a)/r,y=(p-n)/r,h=(d-i)/r,m=(c-l)/r,f=0;f<r;f++)o[f]=new K.Color(a+f*u,n+f*y,i+f*h,l+f*m);return o}(C,o[y+1],g),E=w.length,b=0;b<E;++b)h[m++]=w[b];else for(b=0;b<g;++b)h[m++]=K.Color.clone(C)}h[m]=K.Color.clone(o[o.length-1]),o=h,re.length=0}s=n===z.ArcType.GEODESIC?te.PolylinePipeline.generateCartesianArc({positions:s,minDistance:p,ellipsoid:l,height:c}):te.PolylinePipeline.generateCartesianRhumbArc({positions:s,granularity:p,ellipsoid:l,height:c})}var _,A,P,D,l=4*(_=s.length)-4,T=new Float64Array(3*l),x=new Float64Array(3*l),k=new Float64Array(3*l),V=new Float32Array(2*l),L=r.st?new Float32Array(2*l):void 0,F=W.defined(o)?new Uint8Array(4*l):void 0,G=0,O=0,R=0,I=0;for(b=0;b<_;++b){0===b?(A=oe,Y.Cartesian3.subtract(s[0],s[1],A),Y.Cartesian3.add(s[0],A,A)):A=s[b-1],Y.Cartesian3.clone(A,ne),Y.Cartesian3.clone(s[b],ae),b===_-1?(A=oe,Y.Cartesian3.subtract(s[_-1],s[_-2],A),Y.Cartesian3.add(s[_-1],A,A)):A=s[b+1],Y.Cartesian3.clone(A,ie),W.defined(F)&&(P=0===b||a?o[b]:o[b-1],b!==_-1&&(D=o[b]));for(var S=b===_-1?2:4,B=0===b?2:0;B<S;++B){Y.Cartesian3.pack(ae,T,G),Y.Cartesian3.pack(ne,x,G),Y.Cartesian3.pack(ie,k,G),G+=3;var U=B-2<0?-1:1;V[O++]=B%2*2-1,V[O++]=U*t,r.st&&(L[R++]=b/(_-1),L[R++]=Math.max(V[O-2],0)),W.defined(F)&&(U=B<2?P:D,F[I++]=K.Color.floatToByte(U.red),F[I++]=K.Color.floatToByte(U.green),F[I++]=K.Color.floatToByte(U.blue),F[I++]=K.Color.floatToByte(U.alpha))}}c=new Z.GeometryAttributes;c.position=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:T}),c.prevPosition=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:x}),c.nextPosition=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:k}),c.expandAndWidth=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:V}),r.st&&(c.st=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:L})),W.defined(F)&&(c.color=new X.GeometryAttribute({componentDatatype:Q.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:F,normalize:!0}));var N=$.IndexDatatype.createTypedArray(l,6*_-6),q=0,M=0,H=_-1;for(b=0;b<H;++b)N[M++]=q,N[M++]=q+2,N[M++]=q+1,N[M++]=q+1,N[M++]=q+2,N[M++]=q+3,q+=4;return new X.Geometry({attributes:c,indices:N,primitiveType:X.PrimitiveType.TRIANGLES,boundingSphere:j.BoundingSphere.fromPoints(s),geometryType:X.GeometryType.POLYLINES})}},function(e,t){return(e=W.defined(t)?m.unpack(e,t):e)._ellipsoid=Y.Ellipsoid.clone(e._ellipsoid),m.createGeometry(e)}});
//# sourceMappingURL=createPolylineGeometry.js.map
