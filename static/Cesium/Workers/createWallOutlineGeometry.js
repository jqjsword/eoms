define(["./when-208fe5b0","./Cartesian2-716c2715","./Transforms-f1816abc","./ComponentDatatype-549ec0d3","./Check-d18af7c4","./GeometryAttribute-0ee94cf1","./GeometryAttributes-b0b294d8","./IndexDatatype-d9b71b2b","./Math-3ba16bed","./WallGeometryLibrary-dd239953","./RuntimeError-7f634f5d","./WebGLConstants-76bb35d1","./arrayRemoveDuplicates-28d5a12e","./PolylinePipeline-fe86878e","./EllipsoidGeodesic-4bc5cec5","./EllipsoidRhumbLine-886cd793","./IntersectionTests-680c4e46","./Plane-f5dfabcd"],function(w,_,b,C,m,H,A,k,D,x,e,i,t,r,n,a,o,s){"use strict";var G=new _.Cartesian3,L=new _.Cartesian3;function u(e){var i=(e=w.defaultValue(e,w.defaultValue.EMPTY_OBJECT)).positions,t=e.maximumHeights,r=e.minimumHeights;if(!w.defined(i))throw new m.DeveloperError("options.positions is required.");if(w.defined(t)&&t.length!==i.length)throw new m.DeveloperError("options.positions and options.maximumHeights must have the same length.");if(w.defined(r)&&r.length!==i.length)throw new m.DeveloperError("options.positions and options.minimumHeights must have the same length.");var n=w.defaultValue(e.granularity,D.CesiumMath.RADIANS_PER_DEGREE),e=w.defaultValue(e.ellipsoid,_.Ellipsoid.WGS84);this._positions=i,this._minimumHeights=r,this._maximumHeights=t,this._granularity=n,this._ellipsoid=_.Ellipsoid.clone(e),this._workerName="createWallOutlineGeometry";i=1+i.length*_.Cartesian3.packedLength+2;w.defined(r)&&(i+=r.length),w.defined(t)&&(i+=t.length),this.packedLength=i+_.Ellipsoid.packedLength+1}u.pack=function(e,i,t){if(!w.defined(e))throw new m.DeveloperError("value is required");if(!w.defined(i))throw new m.DeveloperError("array is required");var r;t=w.defaultValue(t,0);var n=e._positions,a=n.length;for(i[t++]=a,r=0;r<a;++r,t+=_.Cartesian3.packedLength)_.Cartesian3.pack(n[r],i,t);var o=e._minimumHeights,a=w.defined(o)?o.length:0;if(i[t++]=a,w.defined(o))for(r=0;r<a;++r)i[t++]=o[r];var s=e._maximumHeights;if(a=w.defined(s)?s.length:0,i[t++]=a,w.defined(s))for(r=0;r<a;++r)i[t++]=s[r];return _.Ellipsoid.pack(e._ellipsoid,i,t),i[t+=_.Ellipsoid.packedLength]=e._granularity,i};var p=_.Ellipsoid.clone(_.Ellipsoid.UNIT_SPHERE),f={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:p,granularity:void 0};return u.unpack=function(e,i,t){if(!w.defined(e))throw new m.DeveloperError("array is required");i=w.defaultValue(i,0);for(var r,n,a=e[i++],o=new Array(a),s=0;s<a;++s,i+=_.Cartesian3.packedLength)o[s]=_.Cartesian3.unpack(e,i);if(0<(a=e[i++]))for(r=new Array(a),s=0;s<a;++s)r[s]=e[i++];if(0<(a=e[i++]))for(n=new Array(a),s=0;s<a;++s)n[s]=e[i++];var l=_.Ellipsoid.unpack(e,i,p),d=e[i+=_.Ellipsoid.packedLength];return w.defined(t)?(t._positions=o,t._minimumHeights=r,t._maximumHeights=n,t._ellipsoid=_.Ellipsoid.clone(l,t._ellipsoid),t._granularity=d,t):(f.positions=o,f.minimumHeights=r,f.maximumHeights=n,f.granularity=d,new u(f))},u.fromConstantHeights=function(e){var i=(e=w.defaultValue(e,w.defaultValue.EMPTY_OBJECT)).positions;if(!w.defined(i))throw new m.DeveloperError("options.positions is required.");var t=e.minimumHeight,r=e.maximumHeight,n=w.defined(t),a=w.defined(r);if(n||a)for(var o=i.length,s=n?new Array(o):void 0,l=a?new Array(o):void 0,d=0;d<o;++d)n&&(s[d]=t),a&&(l[d]=r);return new u({positions:i,maximumHeights:l,minimumHeights:s,ellipsoid:e.ellipsoid})},u.createGeometry=function(e){var i=e._positions,t=e._minimumHeights,r=e._maximumHeights,n=e._granularity,e=e._ellipsoid,t=x.WallGeometryLibrary.computePositions(e,i,r,t,n,!1);if(w.defined(t)){var a=t.bottomPositions,o=t.topPositions,s=o.length,n=2*s,l=new Float64Array(n),d=0;for(s/=3,g=0;g<s;++g){var m=3*g,u=_.Cartesian3.fromArray(o,m,G),m=_.Cartesian3.fromArray(a,m,L);l[d++]=m.x,l[d++]=m.y,l[d++]=m.z,l[d++]=u.x,l[d++]=u.y,l[d++]=u.z}for(var t=new A.GeometryAttributes({position:new H.GeometryAttribute({componentDatatype:C.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:l})}),p=n/3,n=2*p-4+p,f=k.IndexDatatype.createTypedArray(p,n),h=0,g=0;g<p-2;g+=2){var c=g,y=g+2,v=_.Cartesian3.fromArray(l,3*c,G),E=_.Cartesian3.fromArray(l,3*y,L);_.Cartesian3.equalsEpsilon(v,E,D.CesiumMath.EPSILON10)||(v=g+1,E=g+3,f[h++]=v,f[h++]=c,f[h++]=v,f[h++]=E,f[h++]=c,f[h++]=y)}return f[h++]=p-2,f[h++]=p-1,new H.Geometry({attributes:t,indices:f,primitiveType:H.PrimitiveType.LINES,boundingSphere:new b.BoundingSphere.fromVertices(l)})}},function(e,i){return(e=w.defined(i)?u.unpack(e,i):e)._ellipsoid=_.Ellipsoid.clone(e._ellipsoid),u.createGeometry(e)}});
//# sourceMappingURL=createWallOutlineGeometry.js.map
